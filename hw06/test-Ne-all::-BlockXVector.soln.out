<class XVector>
<class ArrayXVector>
<class ConcatXVector>
<class RepeatXVector>
<class ReverseXVector>
<class SwizzleXVector>
<class BlockXVector>
<class Unit>
<class BlockFn1>
<class BlockFn2>
<class BlockFn3>
<class BlockFn4>
<class XVectorTester>
Testing bxv01
(at:ifAbsent: bxv01 0 {nil}) => 0
(at:ifAbsent: bxv01 1 {nil}) => 1
(at:ifAbsent: bxv01 2 {nil}) => 2
(at:ifAbsent: bxv01 3 {nil}) => 3
(at:ifAbsent: bxv01 4 {nil}) => 4
(at:ifAbsent: bxv01 5 {nil}) => 5
(at:ifAbsent: bxv01 7 {nil}) => 7
(at:ifAbsent: bxv01 8 {nil}) => 8
(at:ifAbsent: bxv01 9 {nil}) => 9
(at:ifAbsent: bxv01 1073741823 {nil}) => nil
(at:ifAbsent: bxv01 1073741824 {nil}) => nil
(at:ifAbsent: bxv01 1073741825 {nil}) => nil
(at:ifAbsent: bxv01 -1073741825 {nil}) => nil
(at:ifAbsent: bxv01 -1073741824 {nil}) => nil
(at:ifAbsent: bxv01 -1073741823 {nil}) => nil
(at:ifAbsent: bxv01 -9 {nil}) => 29
(at:ifAbsent: bxv01 -8 {nil}) => 30
(at:ifAbsent: bxv01 -7 {nil}) => 0
(at:ifAbsent: bxv01 -5 {nil}) => 2
(at:ifAbsent: bxv01 -4 {nil}) => 3
(at:ifAbsent: bxv01 -3 {nil}) => 4
(at:ifAbsent: bxv01 -2 {nil}) => 5
(at:ifAbsent: bxv01 -1 {nil}) => 6
Testing bxv01
(includes: bxv01 nil) => <False>
(occurrencesOf: bxv01 nil) => 0
(includes: bxv01 <True>) => <False>
(occurrencesOf: bxv01 <True>) => 0
(includes: bxv01 <False>) => <False>
(occurrencesOf: bxv01 <False>) => 0
(includes: bxv01 0) => <True>
(occurrencesOf: bxv01 0) => 4
(includes: bxv01 1) => <True>
(occurrencesOf: bxv01 1) => 4
(includes: bxv01 2) => <True>
(occurrencesOf: bxv01 2) => 4
(includes: bxv01 42) => <False>
(occurrencesOf: bxv01 42) => 0
(detect:ifNone: bxv01 negative) => nil
(detect:ifNone: bxv01 nonnegative) => 0
(detect:ifNone: bxv01 strictlyPositive) => 1
Testing bxv01
(sum bxv01) => 1416
Testing bxv01
Testing bxv01
(min bxv01) => 0
Testing bxv01
(max bxv01) => 30
Testing bxv01
(similar: bxv01 nil) => <False>
(similar: bxv01 <True>) => <False>
(similar: bxv01 <False>) => <False>
(similar: bxv01 0) => <False>
(similar: bxv01 1) => <False>
(similar: bxv01 2) => <False>
(similar: bxv01 42) => <False>
(similar: bxv01 xv01) => <False>
(similar: bxv01 xv02) => <False>
(similar: bxv01 xv03) => <False>
(similar: bxv01 xv04) => <False>
(similar: bxv01 xv05) => <False>
(similar: bxv01 xv06) => <False>
(similar: bxv01 xv07) => <False>
(similar: bxv01 xv08) => <False>
(similar: bxv01 xv09) => <False>
(similar: bxv01 xv12) => <False>
(similar: bxv01 xv13) => <False>
(similar: bxv01 bxv01) => <True>
(similar: bxv01 bxv02) => <False>
Testing bxv01
(< bxv01 xv01) => <False>
(< bxv01 xv02) => <True>
(< bxv01 xv03) => <True>
(< bxv01 xv04) => <True>
(< bxv01 xv05) => <False>
(< bxv01 xv06) => <False>
(< bxv01 xv07) => <False>
(< bxv01 xv08) => <True>
(< bxv01 xv09) => <True>
(< bxv01 bxv01) => <False>
(< bxv01 bxv02) => <True>
Testing bxv01
(fromIndex:toIndex: bxv01 0 0) => << 0 >>
(fromIndex:toIndex: bxv01 0 1) => << 0 1 >>
(fromIndex:toIndex: bxv01 0 2) => << 0 1 2 >>
(fromIndex:toIndex: bxv01 0 4) => << 0 1 2 3 4 >>
(fromIndex:toIndex: bxv01 1 1) => << 1 >>
(fromIndex:toIndex: bxv01 1 3) => << 1 2 3 >>
(fromIndex:toIndex: bxv01 -1 -1) => << 6 >>
(fromIndex:toIndex: bxv01 -2 -1) => << 5 6 >>
(fromIndex:toIndex: bxv01 -3 -1) => << 4 5 6 >>
(fromIndex:toIndex: bxv01 -5 -1) => << 2 3 4 5 6 >>
(fromIndex:toIndex: bxv01 -2 -2) => << 5 >>
(fromIndex:toIndex: bxv01 -4 -2) => << 3 4 5 >>
(fromIndex:toIndex: bxv01 -1 0) => << 6 0 >>
(fromIndex:toIndex: bxv01 -2 1) => << 5 6 0 1 >>
(fromIndex:toIndex: bxv01 -3 2) => << 4 5 6 0 1 2 >>
(fromIndex:toIndex: bxv01 -4 3) => << 3 4 5 6 0 1 2 3 >>
(fromIndex:toIndex: bxv01 -5 4) => << 2 3 4 5 6 0 1 2 3 4 >>
Testing bxv02
(at:ifAbsent: bxv02 0 {nil}) => 0
(at:ifAbsent: bxv02 1 {nil}) => 1
(at:ifAbsent: bxv02 2 {nil}) => 4
(at:ifAbsent: bxv02 3 {nil}) => 9
(at:ifAbsent: bxv02 4 {nil}) => 16
(at:ifAbsent: bxv02 5 {nil}) => 25
(at:ifAbsent: bxv02 7 {nil}) => 18
(at:ifAbsent: bxv02 8 {nil}) => 2
(at:ifAbsent: bxv02 9 {nil}) => 19
(at:ifAbsent: bxv02 1073741823 {nil}) => nil
(at:ifAbsent: bxv02 1073741824 {nil}) => nil
(at:ifAbsent: bxv02 1073741825 {nil}) => nil
(at:ifAbsent: bxv02 -1073741825 {nil}) => nil
(at:ifAbsent: bxv02 -1073741824 {nil}) => nil
(at:ifAbsent: bxv02 -1073741823 {nil}) => nil
(at:ifAbsent: bxv02 -9 {nil}) => 4
(at:ifAbsent: bxv02 -8 {nil}) => 1
(at:ifAbsent: bxv02 -7 {nil}) => 0
(at:ifAbsent: bxv02 -5 {nil}) => 4
(at:ifAbsent: bxv02 -4 {nil}) => 9
(at:ifAbsent: bxv02 -3 {nil}) => 16
(at:ifAbsent: bxv02 -2 {nil}) => 25
(at:ifAbsent: bxv02 -1 {nil}) => 5
Testing bxv02
(includes: bxv02 nil) => <False>
(occurrencesOf: bxv02 nil) => 0
(includes: bxv02 <True>) => <False>
(occurrencesOf: bxv02 <True>) => 0
(includes: bxv02 <False>) => <False>
(occurrencesOf: bxv02 <False>) => 0
(includes: bxv02 0) => <True>
(occurrencesOf: bxv02 0) => 4
(includes: bxv02 1) => <True>
(occurrencesOf: bxv02 1) => 7
(includes: bxv02 2) => <True>
(occurrencesOf: bxv02 2) => 6
(includes: bxv02 42) => <False>
(occurrencesOf: bxv02 42) => 0
(detect:ifNone: bxv02 negative) => nil
(detect:ifNone: bxv02 nonnegative) => 0
(detect:ifNone: bxv02 strictlyPositive) => 1
Testing bxv02
(sum bxv02) => 1176
Testing bxv02
Testing bxv02
(min bxv02) => 0
Testing bxv02
(max bxv02) => 28
Testing bxv02
(similar: bxv02 nil) => <False>
(similar: bxv02 <True>) => <False>
(similar: bxv02 <False>) => <False>
(similar: bxv02 0) => <False>
(similar: bxv02 1) => <False>
(similar: bxv02 2) => <False>
(similar: bxv02 42) => <False>
(similar: bxv02 xv01) => <False>
(similar: bxv02 xv02) => <False>
(similar: bxv02 xv03) => <False>
(similar: bxv02 xv04) => <False>
(similar: bxv02 xv05) => <False>
(similar: bxv02 xv06) => <False>
(similar: bxv02 xv07) => <False>
(similar: bxv02 xv08) => <False>
(similar: bxv02 xv09) => <False>
(similar: bxv02 xv12) => <False>
(similar: bxv02 xv13) => <False>
(similar: bxv02 bxv01) => <False>
(similar: bxv02 bxv02) => <True>
Testing bxv02
(< bxv02 xv01) => <False>
(< bxv02 xv02) => <True>
(< bxv02 xv03) => <True>
(< bxv02 xv04) => <True>
(< bxv02 xv05) => <False>
(< bxv02 xv06) => <False>
(< bxv02 xv07) => <False>
(< bxv02 xv08) => <True>
(< bxv02 xv09) => <True>
(< bxv02 bxv01) => <False>
(< bxv02 bxv02) => <False>
Testing bxv02
(fromIndex:toIndex: bxv02 0 0) => << 0 >>
(fromIndex:toIndex: bxv02 0 1) => << 0 1 >>
(fromIndex:toIndex: bxv02 0 2) => << 0 1 4 >>
(fromIndex:toIndex: bxv02 0 4) => << 0 1 4 9 16 >>
(fromIndex:toIndex: bxv02 1 1) => << 1 >>
(fromIndex:toIndex: bxv02 1 3) => << 1 4 9 >>
(fromIndex:toIndex: bxv02 -1 -1) => << 5 >>
(fromIndex:toIndex: bxv02 -2 -1) => << 25 5 >>
(fromIndex:toIndex: bxv02 -3 -1) => << 16 25 5 >>
(fromIndex:toIndex: bxv02 -5 -1) => << 4 9 16 25 5 >>
(fromIndex:toIndex: bxv02 -2 -2) => << 25 >>
(fromIndex:toIndex: bxv02 -4 -2) => << 9 16 25 >>
(fromIndex:toIndex: bxv02 -1 0) => << 5 0 >>
(fromIndex:toIndex: bxv02 -2 1) => << 25 5 0 1 >>
(fromIndex:toIndex: bxv02 -3 2) => << 16 25 5 0 1 4 >>
(fromIndex:toIndex: bxv02 -4 3) => << 9 16 25 5 0 1 4 9 >>
(fromIndex:toIndex: bxv02 -5 4) => << 4 9 16 25 5 0 1 4 9 16 >>
