+ : (int int -> int)
- : (int int -> int)
* : (int int -> int)
/ : (int int -> int)
< : (int int -> bool)
> : (int int -> bool)
= : (forall ('a) ('a 'a -> bool))
null? : (forall ('a) ((list 'a) -> bool))
cons : (forall ('a) ('a (list 'a) -> (list 'a)))
car : (forall ('a) ((list 'a) -> 'a))
cdr : (forall ('a) ((list 'a) -> (list 'a)))
println : (forall ('a) ('a -> unit))
print : (forall ('a) ('a -> unit))
printu : (int -> unit)
node : (forall ('a) ((btree 'a) 'a (btree 'a) -> (btree 'a)))
leaf? : (forall ('a) ((btree 'a) -> bool))
node? : (forall ('a) ((btree 'a) -> bool))
node-l : (forall ('a) ((btree 'a) -> (btree 'a)))
node-x : (forall ('a) ((btree 'a) -> 'a))
node-r : (forall ('a) ((btree 'a) -> (btree 'a)))
() : (forall ('a) (btree 'a))
list1 : (forall ('a) ('a -> (list 'a)))
list2 : (forall ('a) ('a 'a -> (list 'a)))
list3 : (forall ('a) ('a 'a 'a -> (list 'a)))
o : (forall ('a 'b 'c) (('b -> 'c) ('a -> 'b) -> ('a -> 'c)))
curry : (forall ('a 'b 'c) (('a 'b -> 'c) -> ('a -> ('b -> 'c))))
uncurry : (forall ('a 'b 'c) (('a -> ('b -> 'c)) -> ('a 'b -> 'c)))
length : (forall ('a) ((list 'a) -> int))
revapp : (forall ('a) ((list 'a) (list 'a) -> (list 'a)))
caar : (forall ('a) ((list (list 'a)) -> 'a))
cadr : (forall ('a) ((list (list 'a)) -> (list 'a)))
and : (bool bool -> bool)
or : (bool bool -> bool)
not : (bool -> bool)
append : (forall ('a) ((list 'a) (list 'a) -> (list 'a)))
bind : (forall ('k 'v) ('k 'v (list (pair 'k 'v)) -> (list (pair 'k 'v))))
find-c : (forall ('k 'v 'answer) ('k (list (pair 'k 'v)) ('v -> 'answer) ( -> 'answer) -> 'answer))
filter : (forall ('a) (('a -> bool) (list 'a) -> (list 'a)))
map : (forall ('a 'b) (('a -> 'b) (list 'a) -> (list 'b)))
foldr : (forall ('a 'b) (('a 'b -> 'b) 'b (list 'a) -> 'b))
foldl : (forall ('a 'b) (('a 'b -> 'b) 'b (list 'a) -> 'b))
exists? : (forall ('a) (('a -> bool) (list 'a) -> bool))
all? : (forall ('a) (('a -> bool) (list 'a) -> bool))
<= : (int int -> bool)
>= : (int int -> bool)
!= : (forall ('a) ('a 'a -> bool))
max : (int int -> int)
min : (int int -> int)
mod : (int int -> int)
gcd : (int int -> int)
lcm : (int int -> int)
