val _ : ('a -> bool) -> 'a alist -> 'a alist = alistFilter

fun run_alistFilter_test elemEq test = run_test (uncurry2 alistFilter) (alistEq elemEq) test

val _ = run_alistFilter_test intEq ("alistFilter_test01", (fn x => x < 42, alistEx1), Nil)
val _ = run_alistFilter_test intEq ("alistFilter_test02", (fn x => x < 42, alistEx2), Nil)
val _ = run_alistFilter_test intEq ("alistFilter_test03", (fn x => x < 42, alistEx3), NonNil (Append (Sing (23), Sing (24))))
val _ = run_alistFilter_test intEq ("alistFilter_test04", (fn x => x < 42, alistEx4), NonNil (Append (Append (Sing (17), Sing (18)), Sing (19))))
val _ = run_alistFilter_test intEq ("alistFilter_test05", (fn x => x < 42, alistEx5), NonNil (Append (Sing (39), Append (Sing (38), Sing (37)))))
val _ = run_alistFilter_test intEq ("alistFilter_test06", (fn x => x < 42, alistEx6), NonNil (Append (Append (Sing (27), Sing (28)), Sing (29))))
val _ = run_alistFilter_test intEq ("alistFilter_test07", (fn x => x < 42, alistEx7), Nil)
val _ = run_alistFilter_test intEq ("alistFilter_test08", (fn x => x >= 42, alistEx1), Nil)
val _ = run_alistFilter_test intEq ("alistFilter_test09", (fn x => x >= 42, alistEx2), NonNil (Sing (42)))
val _ = run_alistFilter_test intEq ("alistFilter_test10", (fn x => x >= 42, alistEx3), Nil)
val _ = run_alistFilter_test intEq ("alistFilter_test11", (fn x => x >= 42, alistEx4), Nil)
val _ = run_alistFilter_test intEq ("alistFilter_test12", (fn x => x >= 42, alistEx5), Nil)
val _ = run_alistFilter_test intEq ("alistFilter_test13", (fn x => x >= 42, alistEx6), NonNil (Append (Sing (79), Append (Sing (78), Sing (77)))))
val _ = run_alistFilter_test intEq ("alistFilter_test14", (fn x => x >= 42, alistEx7), NonNil (Append (Append (Sing (50), Sing (51)), Append (Sing (61), Sing (60)))))
val _ = run_alistFilter_test intEq ("alistFilter_test15", (fn x => x mod 2 = 1, alistEx1), Nil)
val _ = run_alistFilter_test intEq ("alistFilter_test16", (fn x => x mod 2 = 1, alistEx2), Nil)
val _ = run_alistFilter_test intEq ("alistFilter_test17", (fn x => x mod 2 = 1, alistEx3), NonNil (Sing (23)))
val _ = run_alistFilter_test intEq ("alistFilter_test18", (fn x => x mod 2 = 1, alistEx4), NonNil (Append (Sing (17), Sing (19))))
val _ = run_alistFilter_test intEq ("alistFilter_test19", (fn x => x mod 2 = 1, alistEx5), NonNil (Append (Sing (39), Sing (37))))
val _ = run_alistFilter_test intEq ("alistFilter_test20", (fn x => x mod 2 = 1, alistEx6), NonNil (Append (Append (Sing (27), Sing (29)), Append (Sing (79), Sing (77)))))
val _ = run_alistFilter_test intEq ("alistFilter_test21", (fn x => x mod 2 = 1, alistEx7), NonNil (Append (Sing (51), Sing (61))))
val _ = run_alistFilter_test intEq ("alistFilter_test22", (fn x => x mod 2 = 0, alistEx1), Nil)
val _ = run_alistFilter_test intEq ("alistFilter_test23", (fn x => x mod 2 = 0, alistEx2), NonNil (Sing (42)))
val _ = run_alistFilter_test intEq ("alistFilter_test24", (fn x => x mod 2 = 0, alistEx3), NonNil (Sing (24)))
val _ = run_alistFilter_test intEq ("alistFilter_test25", (fn x => x mod 2 = 0, alistEx4), NonNil (Sing (18)))
val _ = run_alistFilter_test intEq ("alistFilter_test26", (fn x => x mod 2 = 0, alistEx5), NonNil (Sing (38)))
val _ = run_alistFilter_test intEq ("alistFilter_test27", (fn x => x mod 2 = 0, alistEx6), NonNil (Append (Sing (28), Sing (78))))
val _ = run_alistFilter_test intEq ("alistFilter_test28", (fn x => x mod 2 = 0, alistEx7), NonNil (Append (Sing (50), Sing (60))))
